/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vue;

import Modele.Connexion;
import java.awt.Color;
import java.awt.Font;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class GestOuvrage extends javax.swing.JFrame {

    Connexion c = new Connexion();
    PreparedStatement s;
    DefaultTableModel dtm = new DefaultTableModel();
    ResultSet rs;

    /**
     * Creates new form GestOuvrage
     */
    public GestOuvrage() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(this);
        setTitle("Ouvrages");
        ImageIcon icon = new ImageIcon("C:\\Users\\HP\\Desktop\\ressources admin\\NetBeansProjects\\Bibliothèque\\src\\Images\\Sans titre.png");
        setIconImage(icon.getImage());
        Font font = new Font("Tahoma", Font.PLAIN, 11);
        tfrechercher.setText("Recherche");
        tfrechercher.setFont(font);
        tfrechercher.setForeground(Color.gray);
        cbsp.setSelectedIndex(0);
        cbstatut.setSelectedIndex(0);

        dtm.setRowCount(0);
        dtm.setColumnCount(0);
        try {
            s = c.connectBdd().prepareStatement("SELECT * FROM ouvrages");
            rs = s.executeQuery();
            String tabtitre[] = {"Rayon", "Titre", "Auteur", "Spécialité", "Statut", "ISBN", "Nombre d'examplaires"};
            for (int i = 0; i < tabtitre.length; i++) {
                dtm.addColumn(tabtitre[i]);
            }
            while (rs.next()) {
                dtm.addRow(new Object[]{rs.getString("rayon"),
                    rs.getString("titre"),
                    rs.getString("auteur"),
                    rs.getString("specialite"),
                    rs.getString("statut"),
                    rs.getString("isbn"),
                    rs.getString("nbrexamplaire")});
            }
            tabouvrages.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(GestOuvrage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

//Methode reset 
    public void reset() {
        tfisbn.setText("");
        tftitre.setText("");
        tfauteur.setText("");
        tfrayon.setText("");
        tfnbrexamplaire.setText("");
        Font font = new Font("Tahoma", Font.PLAIN, 11);
        tfrechercher.setText("Recherche");
        tfrechercher.setFont(font);
        tfrechercher.setForeground(Color.gray);
        bajouter.setVisible(true);
        cbsp.setSelectedIndex(0);
        cbstatut.setSelectedIndex(0);

    }

    public void actualiser() {
        dtm.setRowCount(0);
        dtm.setColumnCount(0);
        try {
            s = c.connectBdd().prepareStatement("SELECT * FROM ouvrages");
            rs = s.executeQuery();
            String tabtitre[] = {"Rayon", "Titre", "Auteur", "Spécialité", "Statut", "ISBN", "Nombre d'examplaires"};
            for (int i = 0; i < tabtitre.length; i++) {
                dtm.addColumn(tabtitre[i]);
            }
            while (rs.next()) {
                dtm.addRow(new Object[]{rs.getString("rayon"),
                    rs.getString("titre"),
                    rs.getString("auteur"),
                    rs.getString("specialite"),
                    rs.getString("statut"),
                    rs.getString("isbn"),
                    rs.getString("nbrexamplaire")});
            }
            tabouvrages.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(GestOuvrage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Methode de selection 
    public void select(int ls) {

        tfrayon.setText(tabouvrages.getValueAt(ls, 0) + "");
        tftitre.setText(tabouvrages.getValueAt(ls, 1) + "");
        tfauteur.setText(tabouvrages.getValueAt(ls, 2) + "");
        cbsp.setSelectedItem(tabouvrages.getValueAt(ls, 3));
        cbstatut.setSelectedItem(tabouvrages.getValueAt(ls, 4));
        tfisbn.setText(tabouvrages.getValueAt(ls, 5) + "");
        tfnbrexamplaire.setText(tabouvrages.getValueAt(ls, 6) + "");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabouvrages = new javax.swing.JTable();
        beffacer = new javax.swing.JButton();
        bsupp = new javax.swing.JButton();
        bajouter = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfisbn = new javax.swing.JTextField();
        tftitre = new javax.swing.JTextField();
        tfauteur = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfnbrexamplaire = new javax.swing.JTextField();
        tfrayon = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbsp = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        cbstatut = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        tfrechercher = new javax.swing.JTextField();
        bretour = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        bmodif = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(0, 0, 255));

        tabouvrages.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tabouvrages.setForeground(new java.awt.Color(0, 0, 255));
        tabouvrages.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Rayon", "Titre", "Auteur", "Spécialité", "Statut", "ISBN", "Nombre d'examplaires"
            }
        ));
        tabouvrages.setGridColor(new java.awt.Color(0, 0, 255));
        tabouvrages.setSelectionBackground(new java.awt.Color(0, 0, 255));
        tabouvrages.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabouvragesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabouvrages);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, 880, 250));

        beffacer.setBackground(new java.awt.Color(255, 255, 255));
        beffacer.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        beffacer.setForeground(new java.awt.Color(153, 102, 0));
        beffacer.setText("Annuler");
        beffacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beffacerActionPerformed(evt);
            }
        });
        jPanel2.add(beffacer, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 350, 110, -1));

        bsupp.setBackground(new java.awt.Color(255, 255, 255));
        bsupp.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        bsupp.setForeground(new java.awt.Color(153, 102, 0));
        bsupp.setText("Supprimer");
        bsupp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsuppActionPerformed(evt);
            }
        });
        jPanel2.add(bsupp, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 350, 120, -1));

        bajouter.setBackground(new java.awt.Color(255, 255, 255));
        bajouter.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        bajouter.setForeground(new java.awt.Color(153, 102, 0));
        bajouter.setText("Ajouter");
        bajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bajouterActionPerformed(evt);
            }
        });
        jPanel2.add(bajouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 350, 110, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setText("ISBN :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, 20));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 255));
        jLabel5.setText("Titre :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 20));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 255));
        jLabel6.setText("Auteur :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, 20));

        tfisbn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tfisbn.setForeground(new java.awt.Color(153, 102, 0));
        tfisbn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfisbnFocusLost(evt);
            }
        });
        jPanel1.add(tfisbn, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 160, -1));

        tftitre.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tftitre.setForeground(new java.awt.Color(153, 102, 0));
        tftitre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tftitreFocusLost(evt);
            }
        });
        jPanel1.add(tftitre, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 160, -1));

        tfauteur.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tfauteur.setForeground(new java.awt.Color(153, 102, 0));
        tfauteur.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfauteurFocusLost(evt);
            }
        });
        jPanel1.add(tfauteur, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 160, -1));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 255));
        jLabel7.setText("Examplaires : ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, 20));

        tfnbrexamplaire.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tfnbrexamplaire.setForeground(new java.awt.Color(153, 102, 0));
        tfnbrexamplaire.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfnbrexamplaireFocusLost(evt);
            }
        });
        jPanel1.add(tfnbrexamplaire, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 160, -1));

        tfrayon.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tfrayon.setForeground(new java.awt.Color(153, 102, 0));
        tfrayon.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfrayonFocusLost(evt);
            }
        });
        jPanel1.add(tfrayon, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 160, -1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Rayon :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 20));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 255));
        jLabel8.setText("Spécialité :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 20));

        cbsp.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cbsp.setForeground(new java.awt.Color(153, 102, 0));
        cbsp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Spécialité", "Informatique", "Mécanique", "Biologie", "Mathématique", "Médcine", "Electronique", "Génie civil", "Gestion et commerce", "Pharmacie", "Langue", "Droit", "Chimie", "Physique" }));
        jPanel1.add(cbsp, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 160, -1));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 255));
        jLabel9.setText("Statut :");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, 20));

        cbstatut.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cbstatut.setForeground(new java.awt.Color(153, 102, 0));
        cbstatut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Statut", "Emprunté", "Pas emprunté" }));
        jPanel1.add(cbstatut, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 160, -1));

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 270, 290));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Informations :");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 20));

        tfrechercher.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tfrechercher.setForeground(new java.awt.Color(153, 102, 0));
        tfrechercher.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfrechercherFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfrechercherFocusLost(evt);
            }
        });
        tfrechercher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfrechercherKeyReleased(evt);
            }
        });
        jPanel2.add(tfrechercher, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 220, -1));

        bretour.setBackground(new java.awt.Color(255, 255, 255));
        bretour.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        bretour.setForeground(new java.awt.Color(153, 102, 0));
        bretour.setText("Retour");
        bretour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bretourActionPerformed(evt);
            }
        });
        jPanel2.add(bretour, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 10, -1, -1));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Ouvrages");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        bmodif.setBackground(new java.awt.Color(255, 255, 255));
        bmodif.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        bmodif.setForeground(new java.awt.Color(153, 102, 0));
        bmodif.setText("Modifier");
        bmodif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmodifActionPerformed(evt);
            }
        });
        jPanel2.add(bmodif, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 350, 120, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bretourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bretourActionPerformed
        try {
            s = c.connectBdd().prepareStatement("SELECT * FROM gestionnaire");

            rs = s.executeQuery();
            while (rs.next()) {
                String co = rs.getString("connect");
                if ("Connecté".equals(co)) {
                    AccueilGestionnaire ag = new AccueilGestionnaire();
                    ag.setVisible(true);
                    setVisible(false);

                } else {
                    AccueilBibliothéquaire ab = new AccueilBibliothéquaire();
                    ab.setVisible(true);
                    setVisible(false);

                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(GestOuvrage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_bretourActionPerformed

    private void tabouvragesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabouvragesMouseClicked
        select(tabouvrages.getSelectedRow());
    }//GEN-LAST:event_tabouvragesMouseClicked

    private void beffacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beffacerActionPerformed
        actualiser();
        reset();
    }//GEN-LAST:event_beffacerActionPerformed

    private void bsuppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsuppActionPerformed
        if (tabouvrages.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Veuillez selectionner la ligne que vous souhaitez supprimé");
        } else if (JOptionPane.showConfirmDialog(this, "Voulez vous vraiment supprimer l'ouvrage ?", "Confirmation", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

            int a = Integer.parseInt(tfnbrexamplaire.getText());
            a = a - 1;
            String b = a + "";
            try {
                s = c.connectBdd().prepareStatement("UPDATE ouvrages SET nbrexamplaire=? WHERE isbn='" + tfisbn.getText() + "'");

                s.setString(1, b);
                s.executeUpdate();
                try {
                    s = c.connectBdd().prepareStatement("DELETE FROM ouvrages WHERE rayon = ?");
                    s.setString(1, tfrayon.getText());
                    s.executeUpdate();

                    JOptionPane.showMessageDialog(this, "La suppression est réussie");
                    actualiser();
                    reset();
                } catch (SQLException ex) {
                    Logger.getLogger(GestOuvrage.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (Exception ex) {
                Logger.getLogger(GestOuvrage.class.getName()).log(Level.SEVERE, null, ex);
            }

        }


    }//GEN-LAST:event_bsuppActionPerformed

    private void bajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bajouterActionPerformed
        if (tfrayon.getText().equals("") || tftitre.getText().equals("") || tfauteur.getText().equals("") || tfisbn.getText().equals("") || tfnbrexamplaire.getText().equals("") || cbsp.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Information inssufisantes merci de remplire tout les champs");

        } else {
            int a = Integer.parseInt(tfnbrexamplaire.getText());
            if (a == 0) {

                JOptionPane.showMessageDialog(this, "Le nombre d'ouvrage doit être supérieur à 0.");
                actualiser();
                reset();
            } else if (a > 0) {

                try {
                    // verifier si le livre existe déjà
                    s = c.connectBdd().prepareStatement("SELECT * FROM ouvrages WHERE isbn=?");
                    s.setString(1, tfisbn.getText());
                    rs = s.executeQuery();
                    if (rs.next()) {
                        // si oui alors mise a jour de l'attribut nbrexamplaire 
                        int b = Integer.parseInt((String) tabouvrages.getValueAt(tabouvrages.getSelectedRow(), 6));
                        b = b + a;
                        tfnbrexamplaire.setText(b + "");
                        try {

                            s = c.connectBdd().prepareStatement("UPDATE ouvrages SET nbrexamplaire=? WHERE isbn='" + tfisbn.getText() + "'");
                            s.setString(1, tfnbrexamplaire.getText());
                            s.executeUpdate();
                        } catch (Exception ex) {
                            Logger.getLogger(GestOuvrage.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        for (int i = 1; i <= a; i++) {
                            try {
                                // verifier si le livre existe déjà
                                s = c.connectBdd().prepareStatement("SELECT * FROM ouvrages WHERE rayon=?");
                                s.setString(1, tfrayon.getText());
                                rs = s.executeQuery();
                                if (rs.next()) {
                                    JOptionPane.showMessageDialog(this, "Cette examplaire existe déjà");
                                    actualiser();
                                    reset();
                                } else {
                                    try {
                                        s = c.connectBdd().prepareStatement("INSERT INTO ouvrages(rayon,titre,auteur,specialite,statut,isbn,nbrexamplaire) VALUES(?,?,?,?,?,?,?)");
                                        s.setString(1, tfrayon.getText());
                                        s.setString(2, tftitre.getText());
                                        s.setString(3, tfauteur.getText());
                                        s.setString(4, cbsp.getSelectedItem() + "");
                                        s.setString(5, "Pas emprunté");
                                        s.setString(6, tfisbn.getText());
                                        s.setString(7, tfnbrexamplaire.getText());
                                        s.executeUpdate();

                                    } catch (SQLException ex) {
                                        Logger.getLogger(GestOuvrage.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }
                            } catch (Exception ex) {
                                Logger.getLogger(GestOuvrage.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            float r = Float.parseFloat(tfrayon.getText());
                            r = (float) (r + 001.00);
                            tfrayon.setText(r + "");
                        }
                    } else {
                        // sinon insertion d'un nouveau tuple dans la base de donnee

                        for (int i = 1; i <= a; i++) {
                            try {
                                // verifier si le livre existe déjà
                                s = c.connectBdd().prepareStatement("SELECT * FROM ouvrages WHERE rayon=?");
                                s.setString(1, tfrayon.getText());
                                rs = s.executeQuery();
                                if (rs.next()) {
                                    JOptionPane.showMessageDialog(this, "Cette examplaire existe déjà");
                                    actualiser();
                                    reset();
                                } else {
                                    try {
                                        s = c.connectBdd().prepareStatement("INSERT INTO ouvrages(rayon,titre,auteur,specialite,statut,isbn,nbrexamplaire) VALUES(?,?,?,?,?,?,?)");
                                        s.setString(1, tfrayon.getText());
                                        s.setString(2, tftitre.getText());
                                        s.setString(3, tfauteur.getText());
                                        s.setString(4, cbsp.getSelectedItem() + "");
                                        s.setString(5, "Pas emprunté");
                                        s.setString(6, tfisbn.getText());
                                        s.setString(7, tfnbrexamplaire.getText());
                                        s.executeUpdate();

                                    } catch (SQLException ex) {
                                        Logger.getLogger(GestOuvrage.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }
                            } catch (Exception ex) {
                                Logger.getLogger(GestOuvrage.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            float r = Float.parseFloat(tfrayon.getText());
                            r = (float) (r + 001.00);
                            tfrayon.setText(r + "");
                        }

                    }
                } catch (SQLException ex) {
                    Logger.getLogger(GestOuvrage.class.getName()).log(Level.SEVERE, null, ex);
                }

                JOptionPane.showMessageDialog(this, "Ouvrage ajouté. ");
                actualiser();
                reset();
            } else if (a < 0) {
                JOptionPane.showMessageDialog(this, " Insertion impossible, veuillez revérifier le nombre d'examplaires ");
                actualiser();
                reset();

            }

        }

    }//GEN-LAST:event_bajouterActionPerformed

    private void tfrayonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfrayonFocusLost
        if (tfrayon.getText().matches("^\\d{3}\\.\\d{2}$") || tfrayon.getText().equals("")) {
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez saisire un rayon valide");
            tfrayon.setText("");

        }
    }//GEN-LAST:event_tfrayonFocusLost

    private void tfisbnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfisbnFocusLost
        if (tfisbn.getText().matches("^\\d{9}(\\d|X)$") || tfisbn.getText().matches("^97(8|9)\\d{10}$") || tfisbn.getText().equals("")) {
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez saisire un ISBN valide");
            tfisbn.setText("");
        }
    }//GEN-LAST:event_tfisbnFocusLost

    private void tftitreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tftitreFocusLost
        if (tftitre.getText().matches("^[\\p{L}\\p{P}\\p{Z}]+$") || tftitre.getText().equals("")) {
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez saisire un titre");
            tftitre.setText("");
        }
    }//GEN-LAST:event_tftitreFocusLost

    private void tfnbrexamplaireFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfnbrexamplaireFocusLost
        if (tfnbrexamplaire.getText().matches("\\d+") || tfnbrexamplaire.getText().equals("")) {
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez saisire un nombre");
            tfnbrexamplaire.setText("");
        }
    }//GEN-LAST:event_tfnbrexamplaireFocusLost

    private void tfauteurFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfauteurFocusLost
        if (tfauteur.getText().matches("[a-zA-Z]+") || tfauteur.getText().matches("[a-zA-Z]+ [a-zA-Z]+") || tfauteur.getText().equals("")) {
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez saisire un nom d'auteur");
            tfauteur.setText("");
        }
    }//GEN-LAST:event_tfauteurFocusLost

    private void tfrechercherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfrechercherKeyReleased
        Font font = new Font("Arial", Font.BOLD, 12);
        tfrechercher.setFont(font);
        tfrechercher.setForeground(new java.awt.Color(153, 102, 0));
        if (tfrechercher.getText().equals("")) {
            actualiser();
        } else {
            try {

                String txt = tfrechercher.getText();
                s = c.connectBdd().prepareStatement("SELECT * FROM ouvrages WHERE rayon like '%" + txt + "%' or titre like '%" + txt + "%' or auteur like '%" + txt + "%' or specialite like '%" + txt + "%' or statut like '%" + txt + "%' or isbn like '%" + txt + "%'");

                rs = s.executeQuery();
                dtm.setRowCount(0);

                while (rs.next()) {
                    dtm.addRow(new Object[]{rs.getString("rayon"),
                        rs.getString("titre"),
                        rs.getString("auteur"),
                        rs.getString("specialite"),
                        rs.getString("statut"),
                        rs.getString("isbn"),
                        rs.getString("nbrexamplaire")});

                }

                tabouvrages.setModel(dtm);

            } catch (SQLException ex) {
                Logger.getLogger(GestOuvrage.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

        }


    }//GEN-LAST:event_tfrechercherKeyReleased

    private void tfrechercherFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfrechercherFocusGained
        tfrechercher.setText("");
    }//GEN-LAST:event_tfrechercherFocusGained

    private void tfrechercherFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfrechercherFocusLost
        if (tfrechercher.getText().equals("")) {
            Font font = new Font("Tahoma", Font.PLAIN, 11);
            tfrechercher.setText("Recherche");
            tfrechercher.setFont(font);
            tfrechercher.setForeground(Color.gray);
        } else {
        }
    }//GEN-LAST:event_tfrechercherFocusLost

    private void bmodifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmodifActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment modifier?", "Confirmation", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (tfrayon.getText().equals("") || tftitre.getText().equals("") || tfauteur.getText().equals("") || tfisbn.getText().equals("") || tfnbrexamplaire.getText().equals("") || cbsp.getSelectedIndex() == 0 || cbstatut.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(this, "Information inssufisantes merci de remplire tout les champs");

            } else {
                try {
                    s = c.connectBdd().prepareStatement("UPDATE ouvrages SET rayon=?, titre=?, auteur=?, specialite=?, statut=?, isbn=?, nbrexamplaire=? WHERE rayon='" + tabouvrages.getValueAt(tabouvrages.getSelectedRow(), 0) + "'");

                    s.setString(1, tfrayon.getText());
                    s.setString(2, tftitre.getText());
                    s.setString(3, tfauteur.getText());
                    s.setString(4, cbsp.getSelectedItem() + "");
                    s.setString(5, cbstatut.getSelectedItem() + "");
                    s.setString(6, tfisbn.getText());
                    s.setString(7, tfnbrexamplaire.getText());
                    s.executeUpdate();

                    JOptionPane.showMessageDialog(this, "Modification faite avec succes");
                    actualiser();
                    reset();

                } catch (SQLException ex) {
                    Logger.getLogger(GestOuvrage.class
                            .getName()).log(Level.SEVERE, null, ex);
                }

            }

        }
    }//GEN-LAST:event_bmodifActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestOuvrage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestOuvrage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestOuvrage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestOuvrage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestOuvrage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bajouter;
    private javax.swing.JButton beffacer;
    private javax.swing.JButton bmodif;
    private javax.swing.JButton bretour;
    private javax.swing.JButton bsupp;
    private javax.swing.JComboBox<String> cbsp;
    private javax.swing.JComboBox<String> cbstatut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabouvrages;
    private javax.swing.JTextField tfauteur;
    private javax.swing.JTextField tfisbn;
    private javax.swing.JTextField tfnbrexamplaire;
    private javax.swing.JTextField tfrayon;
    private javax.swing.JTextField tfrechercher;
    private javax.swing.JTextField tftitre;
    // End of variables declaration//GEN-END:variables
}
